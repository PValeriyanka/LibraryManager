name: dockercompose2503861903659669995
services:
  librarymanager-db:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "13101991"
    image: mcr.microsoft.com/mssql/server
    networks:
      librarymanager_network: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: librarymanager-db-data
        target: /var/opt/mssql
        volume: {}
  librarymanager.client:
    build:
      context: D:\Studing\MODSEN\LibraryManager\librarymanager.client
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
    image: client:latest
    networks:
      librarymanager_network: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\Studing\MODSEN\LibraryManager\librarymanager.client
        target: /app
        bind:
          create_host_path: true
      - type: volume
        target: /app/node_modules
        volume: {}
  librarymanager.server:
    build:
      context: D:\Studing\MODSEN\LibraryManager
      dockerfile: LibraryManager.Server/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: LibraryManager.Server
    depends_on:
      librarymanager-db:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_URLS: http://+:5000
    image: librarymanagerserver
    labels:
      com.microsoft.visual-studio.project-name: LibraryManager.Server
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/LibraryManager.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      librarymanager_network: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Asus\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: D:\Soft\VisualStudio\VS\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Soft\VisualStudio\VS\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  librarymanager_network:
    name: dockercompose2503861903659669995_librarymanager_network
    driver: bridge
volumes:
  librarymanager-db-data:
    name: dockercompose2503861903659669995_librarymanager-db-data
    driver: local