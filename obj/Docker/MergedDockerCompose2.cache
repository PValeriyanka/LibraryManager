name: dockercompose2503861903659669995
services:
  client:
    build:
      context: D:\Studing\MODSEN\LibraryManager\client
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    image: client:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5173
        published: "5173"
        protocol: tcp
      - mode: ingress
        target: 3000
        published: "5001"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\Studing\MODSEN\LibraryManager\client
        target: /app
        bind:
          create_host_path: true
      - type: volume
        target: /app/node_modules
        volume: {}
  librarymanager.server:
    build:
      context: D:\Studing\MODSEN\LibraryManager
      dockerfile: LibraryManager.Server/Dockerfile
    depends_on:
      postgres_db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: librarymanagerserver
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Asus\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Asus\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  postgres_db:
    container_name: postgres
    environment:
      POSTGRES_DB: web3ddb
      POSTGRES_PASSWORD: "1234"
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose2503861903659669995_default
volumes:
  postgres-data:
    name: dockercompose2503861903659669995_postgres-data